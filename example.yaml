- name: Container present
  gather_facts: false
  hosts: localhost
  tasks:
  - name: Create container
    community.docker.docker_container:
      name: mycontainer
      image: ubuntu:20.04
      command: bash
      detach: true
      interactive: true
      tty: true
      network_mode: host
  - name: Add docker container to inventory
    add_host:
      name: mycontainer
      ansible_connection: docker

- hosts: mycontainer
  gather_facts: false
  tasks:
  - name: prepare for provisioning
    raw: |
      apt-get -y update
      apt-get -y install --no-install-recommends --no-install-suggests software-properties-common net-tools iputils-ping openssh-client rsync sshpass gpg-agent
      add-apt-repository ppa:deadsnakes/ppa
      apt-get -y update
      apt-get -y install --no-install-recommends --no-install-suggests python3 python3-pip
      pip install dirsync
  - name: demonstrate that normal ansible modules work
    file:
      path: /etc/testdir
      state: directory

- hosts: mycontainer
  gather_facts: false
  tasks:

####################################
## apt (start)
####################################

  # Paste ansible apt code here
  - name: Install dnsmasq for better DNS resolution
    calian.airgap.apt:
      name: ncdu
      state: present

####################################
## apt (end)
####################################

- hosts: mycontainer
  tasks:
  - name: Pull packages to localhost
    ansible.posix.synchronize:
      src: /tmp/packages/
      dest: /tmp/packages
      mode: pull
      partial: yes
      rsync_opts:
        - "--include='*.deb'"
        - "--exclude='*'"

- hosts: kube-node-1
  tasks:
  - name: Upload packages to remote servers
    ansible.posix.synchronize:
      src: /tmp/packages/
      dest: /tmp/packages
      mode: push
      partial: yes
      rsync_opts:
        - "--include='*.deb'"
        - "--exclude='*'"

  - name: Install packages on remote servers
    shell: |
      dpkg -i /tmp/packages/*.deb
